name: Develop Branch Integration

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

env:
  JAVA_VERSION: '21'

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run comprehensive tests
      run: ./gradlew clean test integrationTest --no-daemon --parallel

    - name: Generate coverage report
      run: ./gradlew koverXmlReport --no-daemon

    - name: Verify quality gates
      run: ./gradlew koverVerify --no-daemon

    - name: Build snapshot
      run: ./gradlew build -Pversion=${{ github.sha }}-SNAPSHOT --no-daemon

    - name: Publish snapshot
      env:
        REPSY_USERNAME: ${{ secrets.REPSY_USERNAME }}
        REPSY_PASSWORD: ${{ secrets.REPSY_PASSWORD }}
      run: ./gradlew publish -Pversion=${{ github.sha }}-SNAPSHOT --no-daemon

    - name: Notify development team
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Develop branch build failed - ${context.sha.substring(0, 7)}`,
            body: `## Build Failure on Develop Branch

            **Commit:** \`${context.sha}\`
            **Workflow:** ${context.workflow}
            **Run:** [${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})

            Please investigate and fix the failing tests.`,
            labels: ['bug', 'ci-failure']
          });

  dependency-check:
    name: Dependency Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: Generate dependency report
      run: ./gradlew dependencyUpdates --no-daemon

    - name: Upload dependency report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-updates-report
        path: build/dependencyUpdates/

  code-quality:
    name: Code Quality Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: SonarQube Scan
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        THOMAS_CORE_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        THOMAS_SONAR_URL: ${{ secrets.SONAR_HOST_URL }}
      run: ./gradlew sonar --no-daemon
