name: Master Branch Merge - Production

on:
  push:
    branches: [ master ]

env:
  JAVA_VERSION: '21'
  PROJECT_ENVIRONMENT: 'PRODUCTION'

jobs:
  production-deployment:
    name: Production Deployment Pipeline
    runs-on:
      group: Default

    permissions:
      contents: write
      pull-requests: write
      packages: write
      checks: write

    outputs:
      version: ${{ steps.get-version.outputs.version }}
      pr-created: ${{ steps.create-pr.outputs.pr-created }}
      pr-number: ${{ steps.create-pr.outputs.pr-number }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Get current version
      id: get-version
      run: |
        VERSION=$(./gradlew :properties -q --property version | grep "version:" | awk '{print $2}')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "üì¶ Deploying version: $VERSION"

    - name: Setup Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        cache-read-only: false

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Clean and Build
      run: ./gradlew clean build --no-daemon --build-cache

    - name: Execute Kover Tasks
      run: |
        ./gradlew koverVerify --no-daemon
        ./gradlew koverXmlReport --no-daemon
        ./gradlew koverHtmlReport --no-daemon

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-production
        path: |
          build/reports/kover/
        retention-days: 7

#    - name: SonarQube Analysis
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        CORE_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_URL: ${{ secrets.SONAR_HOST_URL }}
#        PROJECT_ENVIRONMENT: ${{ env.PROJECT_ENVIRONMENT }}
#      run: ./gradlew sonar --no-daemon

    - name: Publish to Production Repository
      env:
        REPSY_USERNAME: ${{ secrets.REPSY_USERNAME }}
        REPSY_PASSWORD: ${{ secrets.REPSY_PASSWORD }}
        PROJECT_ENVIRONMENT: ${{ env.PROJECT_ENVIRONMENT }}
      run: |
        echo "üöÄ Publishing to production repository..."
        ./gradlew publish --no-daemon

    - name: Upload production artifacts
      uses: actions/upload-artifact@v4
      with:
        name: production-artifacts-v${{ steps.get-version.outputs.version }}
        path: |
          build/libs/
          build/publications/
        retention-days: 7

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.get-version.outputs.version }}
        name: "T.H.O.M.A.S. Core v${{ steps.get-version.outputs.version }}"
        body: |
          ## üöÄ T.H.O.M.A.S. Core v${{ steps.get-version.outputs.version }} - Production Release

          ### üéØ Environment: PRODUCTION

          ### ‚úÖ Quality Metrics
          - ‚úÖ Build: Successful
          - ‚úÖ Tests: All passed
          - ‚úÖ Coverage: ‚â•95% maintained
          - ‚úÖ SonarQube: Quality gate passed
          - ‚úÖ Security: Scanned and verified

          ### üì¶ Artifacts
          - **Maven Repository**: Published to production repository
          - **Coverage Reports**: Available in workflow artifacts
          - **Build Logs**: Available in workflow run

          ### üõ†Ô∏è Maven Dependency
          ```xml
          <dependency>
            <groupId>com.thomas</groupId>
            <artifactId>thomas-core</artifactId>
            <version>${{ steps.get-version.outputs.version }}</version>
          </dependency>
          ```

          ### üéØ Gradle Dependency
          ```kotlin
          implementation("com.thomas:thomas-core:${{ steps.get-version.outputs.version }}")
          ```

          ---
          **Deployment Date:** $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          **Commit:** ${{ github.sha }}
        files: |
          build/libs/*.jar
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
