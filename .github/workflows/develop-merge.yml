name: Develop Branch Merge

on:
  push:
    branches: [ develop ]

env:
  JAVA_VERSION: '21'
  PROJECT_ENVIRONMENT: 'DEVELOPMENT'

jobs:
  develop-merge:
    name: Develop Merge Pipeline
    runs-on:
      group: Default

    permissions:
      contents: write
      pull-requests: write
      packages: write
      checks: write

    outputs:
      pr-created: ${{ steps.create-pr.outputs.pr-created }}
      pr-number: ${{ steps.create-pr.outputs.pr-number }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Java ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v3
      with:
        cache-read-only: false

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Create/Update Pull Request to master
      id: create-pr
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          const head = 'develop';
          const base = 'master';
          const currentVersion = await exec.getExecOutput('./gradlew', [':properties', '-q', '--property', 'version'], { silent: true });
          const version = currentVersion.stdout.trim().split('\n').find(line => line.includes('version:')).split(':')[1].trim();

          const title = `ðŸš€ Release to Production - v${version}`;
          const body = `## Release to Production Environment

          ### Version
          **Release Version:** \`${version}\`

          ### Environment
          **Target Environment:** PRODUCTION

          ### Changes
          This PR contains all changes from the develop branch ready for production deployment.

          ### Pre-merge Checklist
          - [x] Development environment testing completed
          - [x] All CI checks passed
          - [ ] Code review completed
          - [ ] Ready for production deployment

          ### Post-merge Actions
          - Production deployment will be triggered
          - Version will be published to Maven repository
          - Release artifacts will be created

          ---
          ðŸ¤– This PR was created automatically from develop branch merge.`;

          // Check if PR already exists
          const { data: existingPRs } = await github.rest.pulls.list({
            owner,
            repo,
            head: `${owner}:${head}`,
            base,
            state: 'open'
          });

          let prCreated = false;
          let prNumber;

          if (existingPRs.length === 0) {
            // Create new PR
            const { data: pr } = await github.rest.pulls.create({
              owner,
              repo,
              title,
              head,
              base,
              body
            });
            prCreated = true;
            prNumber = pr.number;
            console.log(`âœ… Created new PR #${pr.number} to master`);
          } else {
            // Update existing PR
            const existingPR = existingPRs[0];
            await github.rest.pulls.update({
              owner,
              repo,
              pull_number: existingPR.number,
              title,
              body: body + `\n\n**Last Updated:** ${new Date().toISOString()}`
            });
            prCreated = false;
            prNumber = existingPR.number;
            console.log(`âœ… Updated existing PR #${existingPR.number} to master`);
          }

          core.setOutput('pr-created', prCreated);
          core.setOutput('pr-number', prNumber);

    - name: Clean and Build
      env:
        REPSY_USERNAME: ${{ secrets.REPSY_USERNAME }}
        REPSY_PASSWORD: ${{ secrets.REPSY_PASSWORD }}
      run: ./gradlew clean build --no-daemon --build-cache

    - name: Execute Kover Tasks
      env:
        REPSY_USERNAME: ${{ secrets.REPSY_USERNAME }}
        REPSY_PASSWORD: ${{ secrets.REPSY_PASSWORD }}
      run: |
        ./gradlew koverVerify --no-daemon
        ./gradlew koverXmlReport --no-daemon
        ./gradlew koverHtmlReport --no-daemon

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-reports-develop
        path: |
          build/reports/kover/
        retention-days: 7

#    - name: SonarQube Analysis
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#        CORE_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
#        SONAR_URL: ${{ secrets.SONAR_HOST_URL }}
#        PROJECT_ENVIRONMENT: ${{ env.PROJECT_ENVIRONMENT }}
#      run: ./gradlew sonar --no-daemon

    - name: Publish to Repository
      env:
        REPSY_USERNAME: ${{ secrets.REPSY_USERNAME }}
        REPSY_PASSWORD: ${{ secrets.REPSY_PASSWORD }}
        PROJECT_ENVIRONMENT: ${{ env.PROJECT_ENVIRONMENT }}
      run: |
        echo "ðŸ“¦ Publishing to snapshot repository..."
        ./gradlew publish --no-daemon

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-develop
        path: |
          build/libs/
          build/publications/
        retention-days: 7
