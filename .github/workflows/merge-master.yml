name: Production Release

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version increment type'
        required: true
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch

env:
  JAVA_VERSION: '21'

jobs:
  pre-release-validation:
    name: Pre-Release Validation
    runs-on: ubuntu-latest

    permissions:
      contents: read
      checks: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Run full test suite
      run: ./gradlew clean test integrationTest --no-daemon --parallel

    - name: Generate coverage report
      run: ./gradlew koverXmlReport --no-daemon

    - name: Enforce quality gates
      run: ./gradlew koverVerify --no-daemon

    - name: Security scan
      run: ./gradlew dependencyCheckAnalyze --no-daemon || true

    - name: Build release candidate
      run: ./gradlew build --no-daemon

  release:
    name: Create Release
    needs: pre-release-validation
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.version_type != ''

    permissions:
      contents: write
      packages: write

    outputs:
      version: ${{ steps.version.outputs.version }}
      release_created: ${{ steps.release.outputs.release_created }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up JDK
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Determine version increment
      id: version_type
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "type=${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
        else
          echo "type=patch" >> $GITHUB_OUTPUT
        fi

    - name: Increment version
      id: version
      run: |
        case "${{ steps.version_type.outputs.type }}" in
          major) ./gradlew incrementMajorVersion ;;
          minor) ./gradlew incrementMinorVersion ;;
          patch) ./gradlew incrementPatchVersion ;;
        esac

        VERSION=$(./gradlew -q printVersion)
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "New version: $VERSION"

    - name: Build release
      run: ./gradlew build --no-daemon

    - name: Run final quality checks
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        THOMAS_CORE_SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
        THOMAS_SONAR_URL: ${{ secrets.SONAR_HOST_URL }}
      run: ./gradlew sonar --no-daemon

    - name: Publish to Maven repository
      env:
        REPSY_USERNAME: ${{ secrets.REPSY_USERNAME }}
        REPSY_PASSWORD: ${{ secrets.REPSY_PASSWORD }}
      run: ./gradlew publish --no-daemon

    - name: Create GitHub Release
      id: release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.version.outputs.version }}
        name: Release v${{ steps.version.outputs.version }}
        body: |
          ## ðŸš€ Release v${{ steps.version.outputs.version }}

          ### What's Changed
          - Production-ready release
          - All quality gates passed
          - Full test coverage maintained
          - Security scans completed

          ### Artifacts
          - Maven artifacts published to repository
          - Source and Javadoc included

          ### Verification
          - âœ… Unit tests: Passed
          - âœ… Integration tests: Passed
          - âœ… Code coverage: â‰¥95%
          - âœ… SonarQube quality gate: Passed
          - âœ… Security scan: Completed

          **Full Changelog**: https://github.com/NicoBondarenco/thomas-core/compare/v${{ steps.version.outputs.previous_version }}...v${{ steps.version.outputs.version }}
        files: |
          build/libs/*.jar
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add version.properties
        git commit -m "chore: bump version to ${{ steps.version.outputs.version }}" || exit 0
        git push

  post-release:
    name: Post-Release Tasks
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.release_created == 'true'

    permissions:
      contents: write
      issues: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Update changelog
      run: |
        echo "## [v${{ needs.release.outputs.version }}] - $(date +%Y-%m-%d)" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "### Added" >> CHANGELOG.md
        echo "- Production release v${{ needs.release.outputs.version }}" >> CHANGELOG.md
        echo "" >> CHANGELOG.md

    - name: Create post-release issue
      uses: actions/github-script@v7
      with:
        script: |
          await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Post-release tasks for v${{ needs.release.outputs.version }}`,
            body: `## Post-Release Checklist for v${{ needs.release.outputs.version }}

            - [ ] Verify Maven repository publication
            - [ ] Update documentation if needed
            - [ ] Notify dependent projects
            - [ ] Monitor for any issues
            - [ ] Update project README if needed

            **Release URL:** https://github.com/NicoBondarenco/thomas-core/releases/tag/v${{ needs.release.outputs.version }}`,
            labels: ['release', 'task']
          });

    - name: Notify team
      uses: actions/github-script@v7
      with:
        script: |
          console.log('ðŸŽ‰ Release v${{ needs.release.outputs.version }} completed successfully!');
